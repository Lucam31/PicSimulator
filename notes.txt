seperate command and variable info in the 14-bit code by using bit masks
first 6 bits command last 8 bits vars
11 1111 0000 0000 for command   (3F00)
00 0000 1111 1111 for vars      (00FF)

different masks depending on operations
some only use the first 3 or 4 bits for the command


bei stack overflow warnung ausgeben und möglichkeit geben zum weiterlaufen lassen




alu erhält befehl mit adressen, holt sich werte der register aus speicherklasse, schreibt ergebnis an entsprechende adresse
bei overflow carry flag setzen


DataMemory Funktionen:
- writeRegister(register)
- readRegister(register)
- getW()
- setBit(register, bit, value)
- getBit(register, bit)




PCLATH (eigene variable für PCL da mit oberen zwei bits des pclath verknüpft)
Vorteiler (siehe Themenblatt Simulator)
DC (auch invertiert bei subtraktion)
was passiert wenn neue datei geladen wird (Power On Reset)


bei schreiben eines ergebnisses einer operation in das file register prüfen ob das file register pcl ist
dann shit mit pclath machen

wenn port pins verändert werden direkt aktualisieren (oberfläche?) oder wenn auf oberfläche etwas geändert wird im code aktualisieren


t0cs 0 befehlstakt, 1 externer Takt
psa 0 tmr0 vt, 1 wdt vt

wenn vt neu beschrieben wdt resetten


TODO:
- WDT
- interrupts
- 
